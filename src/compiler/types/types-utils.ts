

export const COMPONENTS_DTS_HEADER = `/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */`;


export function indentTypes(code: string) {
  const INDENT_STRING = '  ';
  let indentSize = 0;

  return code
    .split('\n')
    .map(cl => {
      let newCode = cl.trim();
      if (newCode.length === 0) {
        return newCode;
      }
      if (newCode.startsWith('}') && indentSize > 0) {
        indentSize -= 1;
      }
      newCode = INDENT_STRING.repeat(indentSize) + newCode;
      if (newCode.endsWith('{')) {
        indentSize += 1;
      }
      return newCode;
    })
    .join('\n');
}


export function sortImportNames(a: MemberNameData, b: MemberNameData) {
  const aName = a.localName.toLowerCase();
  const bName = b.localName.toLowerCase();

  if (aName < bName) return -1;
  if (aName > bName) return 1;
  if (a.localName < b.localName) return -1;
  if (a.localName > b.localName) return 1;
  return 0;
}


export interface ImportData {
  [key: string]: MemberNameData[];
}


export interface MemberNameData {
  localName: string;
  importName?: string;
}


export interface StencilModule {
  tagNameAsPascal: string;
  StencilComponents: string;
  JSXElements: string;
  global: string;
  HTMLElementTagNameMap: string;
  ElementTagNameMap: string;
  IntrinsicElements: string;
}


export interface TypeInfo {
  [key: string]: {
    type: string;
    optional: boolean;
    required: boolean;
    public: boolean;
    jsdoc?: string;
  };
}
