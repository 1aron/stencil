const terser = require('terser');


const ecma = 7;

const minifyClientOpts = {
  ecma: ecma,
  compress: {
    ecma: ecma,
    arguments: true,
    arrows: false,
    booleans: true,
    collapse_vars: true,
    comparisons: true,
    conditionals: true,
    dead_code: true,
    drop_console: false,
    drop_debugger: true,
    evaluate: true,
    expression: true,
    hoist_funs: true,
    hoist_vars: true,
    ie8: false,
    if_return: true,
    inline: true,
    join_vars: true,
    keep_fargs: false,
    keep_fnames: false,
    keep_infinity: true,
    loops: true,
    module: true,
    negate_iife: false,
    passes: 3,
    properties: true,
    pure_funcs: null,
    pure_getters: false,
    reduce_funcs: true,
    reduce_vars: true,
    sequences: true,
    side_effects: true,
    switches: true,
    typeofs: true,
    toplevel: false,
    top_retain: false,
    unsafe: true,
    unused: true,
    warnings: false
  },
  mangle: {
    properties: {
      builtins: false,
      debug: false,
      keep_quoted: true,
      reserved: [
        'allRenderFn',
        'asyncLifecycle',
        'clientSide',
        'cmpDidLoad',
        'cmpDidUnload',
        'cmpDidUpdate',
        'cmpWillLoad',
        'cmpWillUpdate',
        'connectedCallback',
        'devInspector',
        'disconnectedCallback',
        'element',
        'es5',
        'event',
        'externalModuleLoader',
        'hasRenderFn',
        'hostData',
        'hostListener',
        'hostListenerTarget',
        'hostListenerTargetBody',
        'hostListenerTargetDocument',
        'hostListenerTargetParent',
        'hostListenerTargetWindow',
        'hotModuleReplacement',
        'isDebug',
        'isDev',
        'isProd',
        'lazyLoad',
        'lifecycle',
        'member',
        'method',
        'mode',
        'noRenderFn',
        'noVdomRender',
        'observeAttribute',
        'polyfills',
        'prerenderClientSide',
        'prerenderServerSide',
        'prop',
        'propMutable',
        'profile',
        'reflect',
        'scoped',
        'shadowDom',
        'slot',
        'slotPolyfill',
        'state',
        'style',
        'svg',
        'syncQueue',
        'taskQueue',
        'updatable',
        'vdomAttribute',
        'vdomClass',
        'vdomFunctional',
        'vdomKey',
        'vdomListener',
        'vdomRef',
        'vdomRender',
        'vdomStyle',
        'vdomText',
        'watchCallback',
      ]
    },
    toplevel: true,
    reserved: [
      'BUILD',
      'h'
    ]
  },
  output: {
    ecma: ecma,
    ascii_only: false,
    beautify: false,
    comments: false,
    ie8: false,
    indent_level: 0,
    indent_start: 0,
    inline_script: false,
    keep_quoted_props: false,
    max_line_len: false,
    preamble: null,
    quote_keys: false,
    quote_style: 0,
    semicolons: true,
    shebang: true,
    source_map: null,
    webkit: false,
    width: 80,
    wrap_iife: false
  }
};


function minifyClientCore(input) {
  return terser.minify(input, minifyClientOpts);
}


exports.minifyClientCore = minifyClientCore;
