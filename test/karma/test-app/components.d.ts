/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { JSXElements } from '@stencil/core';




export namespace Components {

  interface AttributeBasicRoot {}
  interface AttributeBasicRootAttributes extends JSXElements.HTMLAttributes {}

  interface AttributeBasic {}
  interface AttributeBasicAttributes extends JSXElements.HTMLAttributes {}

  interface AttributeBooleanRoot {}
  interface AttributeBooleanRootAttributes extends JSXElements.HTMLAttributes {}

  interface AttributeBoolean {}
  interface AttributeBooleanAttributes extends JSXElements.HTMLAttributes {}

  interface AttributeComplex {}
  interface AttributeComplexAttributes extends JSXElements.HTMLAttributes {}

  interface AttributeHost {}
  interface AttributeHostAttributes extends JSXElements.HTMLAttributes {}

  interface AttributeHtmlRoot {}
  interface AttributeHtmlRootAttributes extends JSXElements.HTMLAttributes {}

  interface ConditionalBasic {}
  interface ConditionalBasicAttributes extends JSXElements.HTMLAttributes {}

  interface ConditionalRerenderRoot {}
  interface ConditionalRerenderRootAttributes extends JSXElements.HTMLAttributes {}

  interface ConditionalRerender {}
  interface ConditionalRerenderAttributes extends JSXElements.HTMLAttributes {}

  interface CssVariablesRoot {}
  interface CssVariablesRootAttributes extends JSXElements.HTMLAttributes {}

  interface CssVariables {}
  interface CssVariablesAttributes extends JSXElements.HTMLAttributes {}

  interface CustomEvent {}
  interface CustomEventAttributes extends JSXElements.HTMLAttributes {}

  interface DynamicCssVariable {}
  interface DynamicCssVariableAttributes extends JSXElements.HTMLAttributes {}

  interface DynamicImport {}
  interface DynamicImportAttributes extends JSXElements.HTMLAttributes {}

  interface Es5AddclassSvg {}
  interface Es5AddclassSvgAttributes extends JSXElements.HTMLAttributes {}

  interface EsmImport {}
  interface EsmImportAttributes extends JSXElements.HTMLAttributes {}

  interface InitCssRoot {}
  interface InitCssRootAttributes extends JSXElements.HTMLAttributes {}

  interface KeyReorderRoot {}
  interface KeyReorderRootAttributes extends JSXElements.HTMLAttributes {}

  interface KeyReorder {}
  interface KeyReorderAttributes extends JSXElements.HTMLAttributes {}

  interface LifecycleAsyncA {}
  interface LifecycleAsyncAAttributes extends JSXElements.HTMLAttributes {}

  interface LifecycleAsyncB {}
  interface LifecycleAsyncBAttributes extends JSXElements.HTMLAttributes {}

  interface LifecycleAsyncC {}
  interface LifecycleAsyncCAttributes extends JSXElements.HTMLAttributes {}

  interface LifecycleBasicA {}
  interface LifecycleBasicAAttributes extends JSXElements.HTMLAttributes {}

  interface LifecycleBasicB {}
  interface LifecycleBasicBAttributes extends JSXElements.HTMLAttributes {}

  interface LifecycleBasicC {}
  interface LifecycleBasicCAttributes extends JSXElements.HTMLAttributes {}

  interface LifecycleOnReadyA {}
  interface LifecycleOnReadyAAttributes extends JSXElements.HTMLAttributes {}

  interface LifecycleOnReadyB {}
  interface LifecycleOnReadyBAttributes extends JSXElements.HTMLAttributes {}

  interface LifecycleOnReadyC {}
  interface LifecycleOnReadyCAttributes extends JSXElements.HTMLAttributes {}

  interface LifecycleUnloadA {}
  interface LifecycleUnloadAAttributes extends JSXElements.HTMLAttributes {}

  interface LifecycleUnloadB {}
  interface LifecycleUnloadBAttributes extends JSXElements.HTMLAttributes {}

  interface LifecycleUnloadRoot {}
  interface LifecycleUnloadRootAttributes extends JSXElements.HTMLAttributes {}

  interface NodeGlobals {}
  interface NodeGlobalsAttributes extends JSXElements.HTMLAttributes {}

  interface ReflectToAttr {}
  interface ReflectToAttrAttributes extends JSXElements.HTMLAttributes {}

  interface ScopedBasicRoot {}
  interface ScopedBasicRootAttributes extends JSXElements.HTMLAttributes {}

  interface ScopedBasic {}
  interface ScopedBasicAttributes extends JSXElements.HTMLAttributes {}

  interface ShadowDomArrayRoot {}
  interface ShadowDomArrayRootAttributes extends JSXElements.HTMLAttributes {}

  interface ShadowDomArray {}
  interface ShadowDomArrayAttributes extends JSXElements.HTMLAttributes {}

  interface ShadowDomBasicRoot {}
  interface ShadowDomBasicRootAttributes extends JSXElements.HTMLAttributes {}

  interface ShadowDomBasic {}
  interface ShadowDomBasicAttributes extends JSXElements.HTMLAttributes {}

  interface ShadowDomModeRoot {}
  interface ShadowDomModeRootAttributes extends JSXElements.HTMLAttributes {}

  interface ShadowDomMode {}
  interface ShadowDomModeAttributes extends JSXElements.HTMLAttributes {}

  interface ShadowDomSlotBasic {}
  interface ShadowDomSlotBasicAttributes extends JSXElements.HTMLAttributes {}

  interface ShadowDomSlotNestedRoot {}
  interface ShadowDomSlotNestedRootAttributes extends JSXElements.HTMLAttributes {}

  interface ShadowDomSlotNested {}
  interface ShadowDomSlotNestedAttributes extends JSXElements.HTMLAttributes {}

  interface SlotArrayBasic {}
  interface SlotArrayBasicAttributes extends JSXElements.HTMLAttributes {}

  interface SlotArrayComplexRoot {}
  interface SlotArrayComplexRootAttributes extends JSXElements.HTMLAttributes {}

  interface SlotArrayComplex {}
  interface SlotArrayComplexAttributes extends JSXElements.HTMLAttributes {}

  interface SlotArrayTop {}
  interface SlotArrayTopAttributes extends JSXElements.HTMLAttributes {}

  interface SlotBasicOrderRoot {}
  interface SlotBasicOrderRootAttributes extends JSXElements.HTMLAttributes {}

  interface SlotBasicOrder {}
  interface SlotBasicOrderAttributes extends JSXElements.HTMLAttributes {}

  interface SlotBasicRoot {}
  interface SlotBasicRootAttributes extends JSXElements.HTMLAttributes {}

  interface SlotBasic {}
  interface SlotBasicAttributes extends JSXElements.HTMLAttributes {}

  interface SlotDynamicWrapperRoot {}
  interface SlotDynamicWrapperRootAttributes extends JSXElements.HTMLAttributes {}

  interface SlotDynamicWrapper {}
  interface SlotDynamicWrapperAttributes extends JSXElements.HTMLAttributes {}

  interface SlotFallbackRoot {}
  interface SlotFallbackRootAttributes extends JSXElements.HTMLAttributes {}

  interface SlotFallback {}
  interface SlotFallbackAttributes extends JSXElements.HTMLAttributes {}

  interface SlotHtml {}
  interface SlotHtmlAttributes extends JSXElements.HTMLAttributes {}

  interface SlotLightDomRoot {}
  interface SlotLightDomRootAttributes extends JSXElements.HTMLAttributes {}

  interface SlotLightDomContent {}
  interface SlotLightDomContentAttributes extends JSXElements.HTMLAttributes {}

  interface SlotMapOrderRoot {}
  interface SlotMapOrderRootAttributes extends JSXElements.HTMLAttributes {}

  interface SlotMapOrder {}
  interface SlotMapOrderAttributes extends JSXElements.HTMLAttributes {}

  interface SlotReorderRoot {}
  interface SlotReorderRootAttributes extends JSXElements.HTMLAttributes {}

  interface SlotReorder {}
  interface SlotReorderAttributes extends JSXElements.HTMLAttributes {}

  interface SlotReplaceWrapperRoot {}
  interface SlotReplaceWrapperRootAttributes extends JSXElements.HTMLAttributes {}

  interface SlotReplaceWrapper {}
  interface SlotReplaceWrapperAttributes extends JSXElements.HTMLAttributes {}

  interface CssCmp {}
  interface CssCmpAttributes extends JSXElements.HTMLAttributes {}

  interface SassCmp {}
  interface SassCmpAttributes extends JSXElements.HTMLAttributes {}

  interface SvgAttr {}
  interface SvgAttrAttributes extends JSXElements.HTMLAttributes {}

  interface SvgClass {}
  interface SvgClassAttributes extends JSXElements.HTMLAttributes {}

  interface Tag3dComponent {}
  interface Tag3dComponentAttributes extends JSXElements.HTMLAttributes {}

  interface Tag88 {}
  interface Tag88Attributes extends JSXElements.HTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'AttributeBasicRoot': Components.AttributeBasicRoot;
    'AttributeBasic': Components.AttributeBasic;
    'AttributeBooleanRoot': Components.AttributeBooleanRoot;
    'AttributeBoolean': Components.AttributeBoolean;
    'AttributeComplex': Components.AttributeComplex;
    'AttributeHost': Components.AttributeHost;
    'AttributeHtmlRoot': Components.AttributeHtmlRoot;
    'ConditionalBasic': Components.ConditionalBasic;
    'ConditionalRerenderRoot': Components.ConditionalRerenderRoot;
    'ConditionalRerender': Components.ConditionalRerender;
    'CssVariablesRoot': Components.CssVariablesRoot;
    'CssVariables': Components.CssVariables;
    'CustomEvent': Components.CustomEvent;
    'DynamicCssVariable': Components.DynamicCssVariable;
    'DynamicImport': Components.DynamicImport;
    'Es5AddclassSvg': Components.Es5AddclassSvg;
    'EsmImport': Components.EsmImport;
    'InitCssRoot': Components.InitCssRoot;
    'KeyReorderRoot': Components.KeyReorderRoot;
    'KeyReorder': Components.KeyReorder;
    'LifecycleAsyncA': Components.LifecycleAsyncA;
    'LifecycleAsyncB': Components.LifecycleAsyncB;
    'LifecycleAsyncC': Components.LifecycleAsyncC;
    'LifecycleBasicA': Components.LifecycleBasicA;
    'LifecycleBasicB': Components.LifecycleBasicB;
    'LifecycleBasicC': Components.LifecycleBasicC;
    'LifecycleOnReadyA': Components.LifecycleOnReadyA;
    'LifecycleOnReadyB': Components.LifecycleOnReadyB;
    'LifecycleOnReadyC': Components.LifecycleOnReadyC;
    'LifecycleUnloadA': Components.LifecycleUnloadA;
    'LifecycleUnloadB': Components.LifecycleUnloadB;
    'LifecycleUnloadRoot': Components.LifecycleUnloadRoot;
    'NodeGlobals': Components.NodeGlobals;
    'ReflectToAttr': Components.ReflectToAttr;
    'ScopedBasicRoot': Components.ScopedBasicRoot;
    'ScopedBasic': Components.ScopedBasic;
    'ShadowDomArrayRoot': Components.ShadowDomArrayRoot;
    'ShadowDomArray': Components.ShadowDomArray;
    'ShadowDomBasicRoot': Components.ShadowDomBasicRoot;
    'ShadowDomBasic': Components.ShadowDomBasic;
    'ShadowDomModeRoot': Components.ShadowDomModeRoot;
    'ShadowDomMode': Components.ShadowDomMode;
    'ShadowDomSlotBasic': Components.ShadowDomSlotBasic;
    'ShadowDomSlotNestedRoot': Components.ShadowDomSlotNestedRoot;
    'ShadowDomSlotNested': Components.ShadowDomSlotNested;
    'SlotArrayBasic': Components.SlotArrayBasic;
    'SlotArrayComplexRoot': Components.SlotArrayComplexRoot;
    'SlotArrayComplex': Components.SlotArrayComplex;
    'SlotArrayTop': Components.SlotArrayTop;
    'SlotBasicOrderRoot': Components.SlotBasicOrderRoot;
    'SlotBasicOrder': Components.SlotBasicOrder;
    'SlotBasicRoot': Components.SlotBasicRoot;
    'SlotBasic': Components.SlotBasic;
    'SlotDynamicWrapperRoot': Components.SlotDynamicWrapperRoot;
    'SlotDynamicWrapper': Components.SlotDynamicWrapper;
    'SlotFallbackRoot': Components.SlotFallbackRoot;
    'SlotFallback': Components.SlotFallback;
    'SlotHtml': Components.SlotHtml;
    'SlotLightDomRoot': Components.SlotLightDomRoot;
    'SlotLightDomContent': Components.SlotLightDomContent;
    'SlotMapOrderRoot': Components.SlotMapOrderRoot;
    'SlotMapOrder': Components.SlotMapOrder;
    'SlotReorderRoot': Components.SlotReorderRoot;
    'SlotReorder': Components.SlotReorder;
    'SlotReplaceWrapperRoot': Components.SlotReplaceWrapperRoot;
    'SlotReplaceWrapper': Components.SlotReplaceWrapper;
    'CssCmp': Components.CssCmp;
    'SassCmp': Components.SassCmp;
    'SvgAttr': Components.SvgAttr;
    'SvgClass': Components.SvgClass;
    'Tag3dComponent': Components.Tag3dComponent;
    'Tag88': Components.Tag88;
  }

  interface StencilIntrinsicElements {
    'attribute-basic-root': Components.AttributeBasicRootAttributes;
    'attribute-basic': Components.AttributeBasicAttributes;
    'attribute-boolean-root': Components.AttributeBooleanRootAttributes;
    'attribute-boolean': Components.AttributeBooleanAttributes;
    'attribute-complex': Components.AttributeComplexAttributes;
    'attribute-host': Components.AttributeHostAttributes;
    'attribute-html-root': Components.AttributeHtmlRootAttributes;
    'conditional-basic': Components.ConditionalBasicAttributes;
    'conditional-rerender-root': Components.ConditionalRerenderRootAttributes;
    'conditional-rerender': Components.ConditionalRerenderAttributes;
    'css-variables-root': Components.CssVariablesRootAttributes;
    'css-variables': Components.CssVariablesAttributes;
    'custom-event': Components.CustomEventAttributes;
    'dynamic-css-variable': Components.DynamicCssVariableAttributes;
    'dynamic-import': Components.DynamicImportAttributes;
    'es5-addclass-svg': Components.Es5AddclassSvgAttributes;
    'esm-import': Components.EsmImportAttributes;
    'init-css-root': Components.InitCssRootAttributes;
    'key-reorder-root': Components.KeyReorderRootAttributes;
    'key-reorder': Components.KeyReorderAttributes;
    'lifecycle-async-a': Components.LifecycleAsyncAAttributes;
    'lifecycle-async-b': Components.LifecycleAsyncBAttributes;
    'lifecycle-async-c': Components.LifecycleAsyncCAttributes;
    'lifecycle-basic-a': Components.LifecycleBasicAAttributes;
    'lifecycle-basic-b': Components.LifecycleBasicBAttributes;
    'lifecycle-basic-c': Components.LifecycleBasicCAttributes;
    'lifecycle-on-ready-a': Components.LifecycleOnReadyAAttributes;
    'lifecycle-on-ready-b': Components.LifecycleOnReadyBAttributes;
    'lifecycle-on-ready-c': Components.LifecycleOnReadyCAttributes;
    'lifecycle-unload-a': Components.LifecycleUnloadAAttributes;
    'lifecycle-unload-b': Components.LifecycleUnloadBAttributes;
    'lifecycle-unload-root': Components.LifecycleUnloadRootAttributes;
    'node-globals': Components.NodeGlobalsAttributes;
    'reflect-to-attr': Components.ReflectToAttrAttributes;
    'scoped-basic-root': Components.ScopedBasicRootAttributes;
    'scoped-basic': Components.ScopedBasicAttributes;
    'shadow-dom-array-root': Components.ShadowDomArrayRootAttributes;
    'shadow-dom-array': Components.ShadowDomArrayAttributes;
    'shadow-dom-basic-root': Components.ShadowDomBasicRootAttributes;
    'shadow-dom-basic': Components.ShadowDomBasicAttributes;
    'shadow-dom-mode-root': Components.ShadowDomModeRootAttributes;
    'shadow-dom-mode': Components.ShadowDomModeAttributes;
    'shadow-dom-slot-basic': Components.ShadowDomSlotBasicAttributes;
    'shadow-dom-slot-nested-root': Components.ShadowDomSlotNestedRootAttributes;
    'shadow-dom-slot-nested': Components.ShadowDomSlotNestedAttributes;
    'slot-array-basic': Components.SlotArrayBasicAttributes;
    'slot-array-complex-root': Components.SlotArrayComplexRootAttributes;
    'slot-array-complex': Components.SlotArrayComplexAttributes;
    'slot-array-top': Components.SlotArrayTopAttributes;
    'slot-basic-order-root': Components.SlotBasicOrderRootAttributes;
    'slot-basic-order': Components.SlotBasicOrderAttributes;
    'slot-basic-root': Components.SlotBasicRootAttributes;
    'slot-basic': Components.SlotBasicAttributes;
    'slot-dynamic-wrapper-root': Components.SlotDynamicWrapperRootAttributes;
    'slot-dynamic-wrapper': Components.SlotDynamicWrapperAttributes;
    'slot-fallback-root': Components.SlotFallbackRootAttributes;
    'slot-fallback': Components.SlotFallbackAttributes;
    'slot-html': Components.SlotHtmlAttributes;
    'slot-light-dom-root': Components.SlotLightDomRootAttributes;
    'slot-light-dom-content': Components.SlotLightDomContentAttributes;
    'slot-map-order-root': Components.SlotMapOrderRootAttributes;
    'slot-map-order': Components.SlotMapOrderAttributes;
    'slot-reorder-root': Components.SlotReorderRootAttributes;
    'slot-reorder': Components.SlotReorderAttributes;
    'slot-replace-wrapper-root': Components.SlotReplaceWrapperRootAttributes;
    'slot-replace-wrapper': Components.SlotReplaceWrapperAttributes;
    'css-cmp': Components.CssCmpAttributes;
    'sass-cmp': Components.SassCmpAttributes;
    'svg-attr': Components.SvgAttrAttributes;
    'svg-class': Components.SvgClassAttributes;
    'tag-3d-component': Components.Tag3dComponentAttributes;
    'tag-88': Components.Tag88Attributes;
  }


  interface HTMLAttributeBasicRootElement extends Components.AttributeBasicRoot, HTMLElement {}
  var HTMLAttributeBasicRootElement: {
    prototype: HTMLAttributeBasicRootElement;
    new (): HTMLAttributeBasicRootElement;
  };

  interface HTMLAttributeBasicElement extends Components.AttributeBasic, HTMLElement {}
  var HTMLAttributeBasicElement: {
    prototype: HTMLAttributeBasicElement;
    new (): HTMLAttributeBasicElement;
  };

  interface HTMLAttributeBooleanRootElement extends Components.AttributeBooleanRoot, HTMLElement {}
  var HTMLAttributeBooleanRootElement: {
    prototype: HTMLAttributeBooleanRootElement;
    new (): HTMLAttributeBooleanRootElement;
  };

  interface HTMLAttributeBooleanElement extends Components.AttributeBoolean, HTMLElement {}
  var HTMLAttributeBooleanElement: {
    prototype: HTMLAttributeBooleanElement;
    new (): HTMLAttributeBooleanElement;
  };

  interface HTMLAttributeComplexElement extends Components.AttributeComplex, HTMLElement {}
  var HTMLAttributeComplexElement: {
    prototype: HTMLAttributeComplexElement;
    new (): HTMLAttributeComplexElement;
  };

  interface HTMLAttributeHostElement extends Components.AttributeHost, HTMLElement {}
  var HTMLAttributeHostElement: {
    prototype: HTMLAttributeHostElement;
    new (): HTMLAttributeHostElement;
  };

  interface HTMLAttributeHtmlRootElement extends Components.AttributeHtmlRoot, HTMLElement {}
  var HTMLAttributeHtmlRootElement: {
    prototype: HTMLAttributeHtmlRootElement;
    new (): HTMLAttributeHtmlRootElement;
  };

  interface HTMLConditionalBasicElement extends Components.ConditionalBasic, HTMLElement {}
  var HTMLConditionalBasicElement: {
    prototype: HTMLConditionalBasicElement;
    new (): HTMLConditionalBasicElement;
  };

  interface HTMLConditionalRerenderRootElement extends Components.ConditionalRerenderRoot, HTMLElement {}
  var HTMLConditionalRerenderRootElement: {
    prototype: HTMLConditionalRerenderRootElement;
    new (): HTMLConditionalRerenderRootElement;
  };

  interface HTMLConditionalRerenderElement extends Components.ConditionalRerender, HTMLElement {}
  var HTMLConditionalRerenderElement: {
    prototype: HTMLConditionalRerenderElement;
    new (): HTMLConditionalRerenderElement;
  };

  interface HTMLCssVariablesRootElement extends Components.CssVariablesRoot, HTMLElement {}
  var HTMLCssVariablesRootElement: {
    prototype: HTMLCssVariablesRootElement;
    new (): HTMLCssVariablesRootElement;
  };

  interface HTMLCssVariablesElement extends Components.CssVariables, HTMLElement {}
  var HTMLCssVariablesElement: {
    prototype: HTMLCssVariablesElement;
    new (): HTMLCssVariablesElement;
  };

  interface HTMLCustomEventElement extends Components.CustomEvent, HTMLElement {}
  var HTMLCustomEventElement: {
    prototype: HTMLCustomEventElement;
    new (): HTMLCustomEventElement;
  };

  interface HTMLDynamicCssVariableElement extends Components.DynamicCssVariable, HTMLElement {}
  var HTMLDynamicCssVariableElement: {
    prototype: HTMLDynamicCssVariableElement;
    new (): HTMLDynamicCssVariableElement;
  };

  interface HTMLDynamicImportElement extends Components.DynamicImport, HTMLElement {}
  var HTMLDynamicImportElement: {
    prototype: HTMLDynamicImportElement;
    new (): HTMLDynamicImportElement;
  };

  interface HTMLEs5AddclassSvgElement extends Components.Es5AddclassSvg, HTMLElement {}
  var HTMLEs5AddclassSvgElement: {
    prototype: HTMLEs5AddclassSvgElement;
    new (): HTMLEs5AddclassSvgElement;
  };

  interface HTMLEsmImportElement extends Components.EsmImport, HTMLElement {}
  var HTMLEsmImportElement: {
    prototype: HTMLEsmImportElement;
    new (): HTMLEsmImportElement;
  };

  interface HTMLInitCssRootElement extends Components.InitCssRoot, HTMLElement {}
  var HTMLInitCssRootElement: {
    prototype: HTMLInitCssRootElement;
    new (): HTMLInitCssRootElement;
  };

  interface HTMLKeyReorderRootElement extends Components.KeyReorderRoot, HTMLElement {}
  var HTMLKeyReorderRootElement: {
    prototype: HTMLKeyReorderRootElement;
    new (): HTMLKeyReorderRootElement;
  };

  interface HTMLKeyReorderElement extends Components.KeyReorder, HTMLElement {}
  var HTMLKeyReorderElement: {
    prototype: HTMLKeyReorderElement;
    new (): HTMLKeyReorderElement;
  };

  interface HTMLLifecycleAsyncAElement extends Components.LifecycleAsyncA, HTMLElement {}
  var HTMLLifecycleAsyncAElement: {
    prototype: HTMLLifecycleAsyncAElement;
    new (): HTMLLifecycleAsyncAElement;
  };

  interface HTMLLifecycleAsyncBElement extends Components.LifecycleAsyncB, HTMLElement {}
  var HTMLLifecycleAsyncBElement: {
    prototype: HTMLLifecycleAsyncBElement;
    new (): HTMLLifecycleAsyncBElement;
  };

  interface HTMLLifecycleAsyncCElement extends Components.LifecycleAsyncC, HTMLElement {}
  var HTMLLifecycleAsyncCElement: {
    prototype: HTMLLifecycleAsyncCElement;
    new (): HTMLLifecycleAsyncCElement;
  };

  interface HTMLLifecycleBasicAElement extends Components.LifecycleBasicA, HTMLElement {}
  var HTMLLifecycleBasicAElement: {
    prototype: HTMLLifecycleBasicAElement;
    new (): HTMLLifecycleBasicAElement;
  };

  interface HTMLLifecycleBasicBElement extends Components.LifecycleBasicB, HTMLElement {}
  var HTMLLifecycleBasicBElement: {
    prototype: HTMLLifecycleBasicBElement;
    new (): HTMLLifecycleBasicBElement;
  };

  interface HTMLLifecycleBasicCElement extends Components.LifecycleBasicC, HTMLElement {}
  var HTMLLifecycleBasicCElement: {
    prototype: HTMLLifecycleBasicCElement;
    new (): HTMLLifecycleBasicCElement;
  };

  interface HTMLLifecycleOnReadyAElement extends Components.LifecycleOnReadyA, HTMLElement {}
  var HTMLLifecycleOnReadyAElement: {
    prototype: HTMLLifecycleOnReadyAElement;
    new (): HTMLLifecycleOnReadyAElement;
  };

  interface HTMLLifecycleOnReadyBElement extends Components.LifecycleOnReadyB, HTMLElement {}
  var HTMLLifecycleOnReadyBElement: {
    prototype: HTMLLifecycleOnReadyBElement;
    new (): HTMLLifecycleOnReadyBElement;
  };

  interface HTMLLifecycleOnReadyCElement extends Components.LifecycleOnReadyC, HTMLElement {}
  var HTMLLifecycleOnReadyCElement: {
    prototype: HTMLLifecycleOnReadyCElement;
    new (): HTMLLifecycleOnReadyCElement;
  };

  interface HTMLLifecycleUnloadAElement extends Components.LifecycleUnloadA, HTMLElement {}
  var HTMLLifecycleUnloadAElement: {
    prototype: HTMLLifecycleUnloadAElement;
    new (): HTMLLifecycleUnloadAElement;
  };

  interface HTMLLifecycleUnloadBElement extends Components.LifecycleUnloadB, HTMLElement {}
  var HTMLLifecycleUnloadBElement: {
    prototype: HTMLLifecycleUnloadBElement;
    new (): HTMLLifecycleUnloadBElement;
  };

  interface HTMLLifecycleUnloadRootElement extends Components.LifecycleUnloadRoot, HTMLElement {}
  var HTMLLifecycleUnloadRootElement: {
    prototype: HTMLLifecycleUnloadRootElement;
    new (): HTMLLifecycleUnloadRootElement;
  };

  interface HTMLNodeGlobalsElement extends Components.NodeGlobals, HTMLElement {}
  var HTMLNodeGlobalsElement: {
    prototype: HTMLNodeGlobalsElement;
    new (): HTMLNodeGlobalsElement;
  };

  interface HTMLReflectToAttrElement extends Components.ReflectToAttr, HTMLElement {}
  var HTMLReflectToAttrElement: {
    prototype: HTMLReflectToAttrElement;
    new (): HTMLReflectToAttrElement;
  };

  interface HTMLScopedBasicRootElement extends Components.ScopedBasicRoot, HTMLElement {}
  var HTMLScopedBasicRootElement: {
    prototype: HTMLScopedBasicRootElement;
    new (): HTMLScopedBasicRootElement;
  };

  interface HTMLScopedBasicElement extends Components.ScopedBasic, HTMLElement {}
  var HTMLScopedBasicElement: {
    prototype: HTMLScopedBasicElement;
    new (): HTMLScopedBasicElement;
  };

  interface HTMLShadowDomArrayRootElement extends Components.ShadowDomArrayRoot, HTMLElement {}
  var HTMLShadowDomArrayRootElement: {
    prototype: HTMLShadowDomArrayRootElement;
    new (): HTMLShadowDomArrayRootElement;
  };

  interface HTMLShadowDomArrayElement extends Components.ShadowDomArray, HTMLElement {}
  var HTMLShadowDomArrayElement: {
    prototype: HTMLShadowDomArrayElement;
    new (): HTMLShadowDomArrayElement;
  };

  interface HTMLShadowDomBasicRootElement extends Components.ShadowDomBasicRoot, HTMLElement {}
  var HTMLShadowDomBasicRootElement: {
    prototype: HTMLShadowDomBasicRootElement;
    new (): HTMLShadowDomBasicRootElement;
  };

  interface HTMLShadowDomBasicElement extends Components.ShadowDomBasic, HTMLElement {}
  var HTMLShadowDomBasicElement: {
    prototype: HTMLShadowDomBasicElement;
    new (): HTMLShadowDomBasicElement;
  };

  interface HTMLShadowDomModeRootElement extends Components.ShadowDomModeRoot, HTMLElement {}
  var HTMLShadowDomModeRootElement: {
    prototype: HTMLShadowDomModeRootElement;
    new (): HTMLShadowDomModeRootElement;
  };

  interface HTMLShadowDomModeElement extends Components.ShadowDomMode, HTMLElement {}
  var HTMLShadowDomModeElement: {
    prototype: HTMLShadowDomModeElement;
    new (): HTMLShadowDomModeElement;
  };

  interface HTMLShadowDomSlotBasicElement extends Components.ShadowDomSlotBasic, HTMLElement {}
  var HTMLShadowDomSlotBasicElement: {
    prototype: HTMLShadowDomSlotBasicElement;
    new (): HTMLShadowDomSlotBasicElement;
  };

  interface HTMLShadowDomSlotNestedRootElement extends Components.ShadowDomSlotNestedRoot, HTMLElement {}
  var HTMLShadowDomSlotNestedRootElement: {
    prototype: HTMLShadowDomSlotNestedRootElement;
    new (): HTMLShadowDomSlotNestedRootElement;
  };

  interface HTMLShadowDomSlotNestedElement extends Components.ShadowDomSlotNested, HTMLElement {}
  var HTMLShadowDomSlotNestedElement: {
    prototype: HTMLShadowDomSlotNestedElement;
    new (): HTMLShadowDomSlotNestedElement;
  };

  interface HTMLSlotArrayBasicElement extends Components.SlotArrayBasic, HTMLElement {}
  var HTMLSlotArrayBasicElement: {
    prototype: HTMLSlotArrayBasicElement;
    new (): HTMLSlotArrayBasicElement;
  };

  interface HTMLSlotArrayComplexRootElement extends Components.SlotArrayComplexRoot, HTMLElement {}
  var HTMLSlotArrayComplexRootElement: {
    prototype: HTMLSlotArrayComplexRootElement;
    new (): HTMLSlotArrayComplexRootElement;
  };

  interface HTMLSlotArrayComplexElement extends Components.SlotArrayComplex, HTMLElement {}
  var HTMLSlotArrayComplexElement: {
    prototype: HTMLSlotArrayComplexElement;
    new (): HTMLSlotArrayComplexElement;
  };

  interface HTMLSlotArrayTopElement extends Components.SlotArrayTop, HTMLElement {}
  var HTMLSlotArrayTopElement: {
    prototype: HTMLSlotArrayTopElement;
    new (): HTMLSlotArrayTopElement;
  };

  interface HTMLSlotBasicOrderRootElement extends Components.SlotBasicOrderRoot, HTMLElement {}
  var HTMLSlotBasicOrderRootElement: {
    prototype: HTMLSlotBasicOrderRootElement;
    new (): HTMLSlotBasicOrderRootElement;
  };

  interface HTMLSlotBasicOrderElement extends Components.SlotBasicOrder, HTMLElement {}
  var HTMLSlotBasicOrderElement: {
    prototype: HTMLSlotBasicOrderElement;
    new (): HTMLSlotBasicOrderElement;
  };

  interface HTMLSlotBasicRootElement extends Components.SlotBasicRoot, HTMLElement {}
  var HTMLSlotBasicRootElement: {
    prototype: HTMLSlotBasicRootElement;
    new (): HTMLSlotBasicRootElement;
  };

  interface HTMLSlotBasicElement extends Components.SlotBasic, HTMLElement {}
  var HTMLSlotBasicElement: {
    prototype: HTMLSlotBasicElement;
    new (): HTMLSlotBasicElement;
  };

  interface HTMLSlotDynamicWrapperRootElement extends Components.SlotDynamicWrapperRoot, HTMLElement {}
  var HTMLSlotDynamicWrapperRootElement: {
    prototype: HTMLSlotDynamicWrapperRootElement;
    new (): HTMLSlotDynamicWrapperRootElement;
  };

  interface HTMLSlotDynamicWrapperElement extends Components.SlotDynamicWrapper, HTMLElement {}
  var HTMLSlotDynamicWrapperElement: {
    prototype: HTMLSlotDynamicWrapperElement;
    new (): HTMLSlotDynamicWrapperElement;
  };

  interface HTMLSlotFallbackRootElement extends Components.SlotFallbackRoot, HTMLElement {}
  var HTMLSlotFallbackRootElement: {
    prototype: HTMLSlotFallbackRootElement;
    new (): HTMLSlotFallbackRootElement;
  };

  interface HTMLSlotFallbackElement extends Components.SlotFallback, HTMLElement {}
  var HTMLSlotFallbackElement: {
    prototype: HTMLSlotFallbackElement;
    new (): HTMLSlotFallbackElement;
  };

  interface HTMLSlotHtmlElement extends Components.SlotHtml, HTMLElement {}
  var HTMLSlotHtmlElement: {
    prototype: HTMLSlotHtmlElement;
    new (): HTMLSlotHtmlElement;
  };

  interface HTMLSlotLightDomRootElement extends Components.SlotLightDomRoot, HTMLElement {}
  var HTMLSlotLightDomRootElement: {
    prototype: HTMLSlotLightDomRootElement;
    new (): HTMLSlotLightDomRootElement;
  };

  interface HTMLSlotLightDomContentElement extends Components.SlotLightDomContent, HTMLElement {}
  var HTMLSlotLightDomContentElement: {
    prototype: HTMLSlotLightDomContentElement;
    new (): HTMLSlotLightDomContentElement;
  };

  interface HTMLSlotMapOrderRootElement extends Components.SlotMapOrderRoot, HTMLElement {}
  var HTMLSlotMapOrderRootElement: {
    prototype: HTMLSlotMapOrderRootElement;
    new (): HTMLSlotMapOrderRootElement;
  };

  interface HTMLSlotMapOrderElement extends Components.SlotMapOrder, HTMLElement {}
  var HTMLSlotMapOrderElement: {
    prototype: HTMLSlotMapOrderElement;
    new (): HTMLSlotMapOrderElement;
  };

  interface HTMLSlotReorderRootElement extends Components.SlotReorderRoot, HTMLElement {}
  var HTMLSlotReorderRootElement: {
    prototype: HTMLSlotReorderRootElement;
    new (): HTMLSlotReorderRootElement;
  };

  interface HTMLSlotReorderElement extends Components.SlotReorder, HTMLElement {}
  var HTMLSlotReorderElement: {
    prototype: HTMLSlotReorderElement;
    new (): HTMLSlotReorderElement;
  };

  interface HTMLSlotReplaceWrapperRootElement extends Components.SlotReplaceWrapperRoot, HTMLElement {}
  var HTMLSlotReplaceWrapperRootElement: {
    prototype: HTMLSlotReplaceWrapperRootElement;
    new (): HTMLSlotReplaceWrapperRootElement;
  };

  interface HTMLSlotReplaceWrapperElement extends Components.SlotReplaceWrapper, HTMLElement {}
  var HTMLSlotReplaceWrapperElement: {
    prototype: HTMLSlotReplaceWrapperElement;
    new (): HTMLSlotReplaceWrapperElement;
  };

  interface HTMLCssCmpElement extends Components.CssCmp, HTMLElement {}
  var HTMLCssCmpElement: {
    prototype: HTMLCssCmpElement;
    new (): HTMLCssCmpElement;
  };

  interface HTMLSassCmpElement extends Components.SassCmp, HTMLElement {}
  var HTMLSassCmpElement: {
    prototype: HTMLSassCmpElement;
    new (): HTMLSassCmpElement;
  };

  interface HTMLSvgAttrElement extends Components.SvgAttr, HTMLElement {}
  var HTMLSvgAttrElement: {
    prototype: HTMLSvgAttrElement;
    new (): HTMLSvgAttrElement;
  };

  interface HTMLSvgClassElement extends Components.SvgClass, HTMLElement {}
  var HTMLSvgClassElement: {
    prototype: HTMLSvgClassElement;
    new (): HTMLSvgClassElement;
  };

  interface HTMLTag3dComponentElement extends Components.Tag3dComponent, HTMLElement {}
  var HTMLTag3dComponentElement: {
    prototype: HTMLTag3dComponentElement;
    new (): HTMLTag3dComponentElement;
  };

  interface HTMLTag88Element extends Components.Tag88, HTMLElement {}
  var HTMLTag88Element: {
    prototype: HTMLTag88Element;
    new (): HTMLTag88Element;
  };

  interface HTMLElementTagNameMap {
    'attribute-basic-root': HTMLAttributeBasicRootElement
    'attribute-basic': HTMLAttributeBasicElement
    'attribute-boolean-root': HTMLAttributeBooleanRootElement
    'attribute-boolean': HTMLAttributeBooleanElement
    'attribute-complex': HTMLAttributeComplexElement
    'attribute-host': HTMLAttributeHostElement
    'attribute-html-root': HTMLAttributeHtmlRootElement
    'conditional-basic': HTMLConditionalBasicElement
    'conditional-rerender-root': HTMLConditionalRerenderRootElement
    'conditional-rerender': HTMLConditionalRerenderElement
    'css-variables-root': HTMLCssVariablesRootElement
    'css-variables': HTMLCssVariablesElement
    'custom-event': HTMLCustomEventElement
    'dynamic-css-variable': HTMLDynamicCssVariableElement
    'dynamic-import': HTMLDynamicImportElement
    'es5-addclass-svg': HTMLEs5AddclassSvgElement
    'esm-import': HTMLEsmImportElement
    'init-css-root': HTMLInitCssRootElement
    'key-reorder-root': HTMLKeyReorderRootElement
    'key-reorder': HTMLKeyReorderElement
    'lifecycle-async-a': HTMLLifecycleAsyncAElement
    'lifecycle-async-b': HTMLLifecycleAsyncBElement
    'lifecycle-async-c': HTMLLifecycleAsyncCElement
    'lifecycle-basic-a': HTMLLifecycleBasicAElement
    'lifecycle-basic-b': HTMLLifecycleBasicBElement
    'lifecycle-basic-c': HTMLLifecycleBasicCElement
    'lifecycle-on-ready-a': HTMLLifecycleOnReadyAElement
    'lifecycle-on-ready-b': HTMLLifecycleOnReadyBElement
    'lifecycle-on-ready-c': HTMLLifecycleOnReadyCElement
    'lifecycle-unload-a': HTMLLifecycleUnloadAElement
    'lifecycle-unload-b': HTMLLifecycleUnloadBElement
    'lifecycle-unload-root': HTMLLifecycleUnloadRootElement
    'node-globals': HTMLNodeGlobalsElement
    'reflect-to-attr': HTMLReflectToAttrElement
    'scoped-basic-root': HTMLScopedBasicRootElement
    'scoped-basic': HTMLScopedBasicElement
    'shadow-dom-array-root': HTMLShadowDomArrayRootElement
    'shadow-dom-array': HTMLShadowDomArrayElement
    'shadow-dom-basic-root': HTMLShadowDomBasicRootElement
    'shadow-dom-basic': HTMLShadowDomBasicElement
    'shadow-dom-mode-root': HTMLShadowDomModeRootElement
    'shadow-dom-mode': HTMLShadowDomModeElement
    'shadow-dom-slot-basic': HTMLShadowDomSlotBasicElement
    'shadow-dom-slot-nested-root': HTMLShadowDomSlotNestedRootElement
    'shadow-dom-slot-nested': HTMLShadowDomSlotNestedElement
    'slot-array-basic': HTMLSlotArrayBasicElement
    'slot-array-complex-root': HTMLSlotArrayComplexRootElement
    'slot-array-complex': HTMLSlotArrayComplexElement
    'slot-array-top': HTMLSlotArrayTopElement
    'slot-basic-order-root': HTMLSlotBasicOrderRootElement
    'slot-basic-order': HTMLSlotBasicOrderElement
    'slot-basic-root': HTMLSlotBasicRootElement
    'slot-basic': HTMLSlotBasicElement
    'slot-dynamic-wrapper-root': HTMLSlotDynamicWrapperRootElement
    'slot-dynamic-wrapper': HTMLSlotDynamicWrapperElement
    'slot-fallback-root': HTMLSlotFallbackRootElement
    'slot-fallback': HTMLSlotFallbackElement
    'slot-html': HTMLSlotHtmlElement
    'slot-light-dom-root': HTMLSlotLightDomRootElement
    'slot-light-dom-content': HTMLSlotLightDomContentElement
    'slot-map-order-root': HTMLSlotMapOrderRootElement
    'slot-map-order': HTMLSlotMapOrderElement
    'slot-reorder-root': HTMLSlotReorderRootElement
    'slot-reorder': HTMLSlotReorderElement
    'slot-replace-wrapper-root': HTMLSlotReplaceWrapperRootElement
    'slot-replace-wrapper': HTMLSlotReplaceWrapperElement
    'css-cmp': HTMLCssCmpElement
    'sass-cmp': HTMLSassCmpElement
    'svg-attr': HTMLSvgAttrElement
    'svg-class': HTMLSvgClassElement
    'tag-3d-component': HTMLTag3dComponentElement
    'tag-88': HTMLTag88Element
  }

  interface ElementTagNameMap {
    'attribute-basic-root': HTMLAttributeBasicRootElement;
    'attribute-basic': HTMLAttributeBasicElement;
    'attribute-boolean-root': HTMLAttributeBooleanRootElement;
    'attribute-boolean': HTMLAttributeBooleanElement;
    'attribute-complex': HTMLAttributeComplexElement;
    'attribute-host': HTMLAttributeHostElement;
    'attribute-html-root': HTMLAttributeHtmlRootElement;
    'conditional-basic': HTMLConditionalBasicElement;
    'conditional-rerender-root': HTMLConditionalRerenderRootElement;
    'conditional-rerender': HTMLConditionalRerenderElement;
    'css-variables-root': HTMLCssVariablesRootElement;
    'css-variables': HTMLCssVariablesElement;
    'custom-event': HTMLCustomEventElement;
    'dynamic-css-variable': HTMLDynamicCssVariableElement;
    'dynamic-import': HTMLDynamicImportElement;
    'es5-addclass-svg': HTMLEs5AddclassSvgElement;
    'esm-import': HTMLEsmImportElement;
    'init-css-root': HTMLInitCssRootElement;
    'key-reorder-root': HTMLKeyReorderRootElement;
    'key-reorder': HTMLKeyReorderElement;
    'lifecycle-async-a': HTMLLifecycleAsyncAElement;
    'lifecycle-async-b': HTMLLifecycleAsyncBElement;
    'lifecycle-async-c': HTMLLifecycleAsyncCElement;
    'lifecycle-basic-a': HTMLLifecycleBasicAElement;
    'lifecycle-basic-b': HTMLLifecycleBasicBElement;
    'lifecycle-basic-c': HTMLLifecycleBasicCElement;
    'lifecycle-on-ready-a': HTMLLifecycleOnReadyAElement;
    'lifecycle-on-ready-b': HTMLLifecycleOnReadyBElement;
    'lifecycle-on-ready-c': HTMLLifecycleOnReadyCElement;
    'lifecycle-unload-a': HTMLLifecycleUnloadAElement;
    'lifecycle-unload-b': HTMLLifecycleUnloadBElement;
    'lifecycle-unload-root': HTMLLifecycleUnloadRootElement;
    'node-globals': HTMLNodeGlobalsElement;
    'reflect-to-attr': HTMLReflectToAttrElement;
    'scoped-basic-root': HTMLScopedBasicRootElement;
    'scoped-basic': HTMLScopedBasicElement;
    'shadow-dom-array-root': HTMLShadowDomArrayRootElement;
    'shadow-dom-array': HTMLShadowDomArrayElement;
    'shadow-dom-basic-root': HTMLShadowDomBasicRootElement;
    'shadow-dom-basic': HTMLShadowDomBasicElement;
    'shadow-dom-mode-root': HTMLShadowDomModeRootElement;
    'shadow-dom-mode': HTMLShadowDomModeElement;
    'shadow-dom-slot-basic': HTMLShadowDomSlotBasicElement;
    'shadow-dom-slot-nested-root': HTMLShadowDomSlotNestedRootElement;
    'shadow-dom-slot-nested': HTMLShadowDomSlotNestedElement;
    'slot-array-basic': HTMLSlotArrayBasicElement;
    'slot-array-complex-root': HTMLSlotArrayComplexRootElement;
    'slot-array-complex': HTMLSlotArrayComplexElement;
    'slot-array-top': HTMLSlotArrayTopElement;
    'slot-basic-order-root': HTMLSlotBasicOrderRootElement;
    'slot-basic-order': HTMLSlotBasicOrderElement;
    'slot-basic-root': HTMLSlotBasicRootElement;
    'slot-basic': HTMLSlotBasicElement;
    'slot-dynamic-wrapper-root': HTMLSlotDynamicWrapperRootElement;
    'slot-dynamic-wrapper': HTMLSlotDynamicWrapperElement;
    'slot-fallback-root': HTMLSlotFallbackRootElement;
    'slot-fallback': HTMLSlotFallbackElement;
    'slot-html': HTMLSlotHtmlElement;
    'slot-light-dom-root': HTMLSlotLightDomRootElement;
    'slot-light-dom-content': HTMLSlotLightDomContentElement;
    'slot-map-order-root': HTMLSlotMapOrderRootElement;
    'slot-map-order': HTMLSlotMapOrderElement;
    'slot-reorder-root': HTMLSlotReorderRootElement;
    'slot-reorder': HTMLSlotReorderElement;
    'slot-replace-wrapper-root': HTMLSlotReplaceWrapperRootElement;
    'slot-replace-wrapper': HTMLSlotReplaceWrapperElement;
    'css-cmp': HTMLCssCmpElement;
    'sass-cmp': HTMLSassCmpElement;
    'svg-attr': HTMLSvgAttrElement;
    'svg-class': HTMLSvgClassElement;
    'tag-3d-component': HTMLTag3dComponentElement;
    'tag-88': HTMLTag88Element;
  }

}
